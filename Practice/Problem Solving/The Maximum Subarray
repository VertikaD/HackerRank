# Complete the maxSubarray function below.
# code by Vertika Dhingra.

# 2/5 test cases passed.
# 16.67/50 points gained.

def maxSubarray(arr):

    #Maximum sum among all subarrays using Kadane's algorithm.
    #linear time.
    #also handles the all negative element case.
    
    maximum = max(arr)

    if maximum<0:
        return maximum,maximum

    else:
        max_so_far = 0
        max_ending_here =0

        for i in range(len(arr)):
            max_ending_here=max(max_ending_here+arr[i],0)
            max_so_far=max(max_so_far,max_ending_here)

        return max_so_far,max_so_far
        
        
    # Second Approach for finding maximum sum possible among non empty contiguous subarrays.
    # (not in linear time )(basic approach)
    # this algorithm handles all negative elements case also.
  
    #finding all contiguous non-empty subarrays. (n*(n+1)/2)
    subarrays=[]
    for x in range(len(array)):
        for i in range(len(array)-1):
            n = (i+x)+1
            if n<=len(array):
                subarrays.append(array[i:n])

    #finding maximum possible sum of all contiguous non-empty subarrays.
    print(max(list(sum(x) for x in subarrays)))
